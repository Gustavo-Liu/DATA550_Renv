my_tag_result  = function(df,tdf,col_true="Y1",col_pred="Y1_res"){
# Create a new column for labels
df <- df %>% mutate(Label = "")
# Define conditions for each category
condition_tp <- (tdf[[col_true]] == 1) & (df[[col_pred]] == 1)
condition_fp <- (tdf[[col_true]] == 0) & (df[[col_pred]] == 1)
condition_tn <- (tdf[[col_true]] == 0) & (df[[col_pred]] == 0)
condition_fn <- (tdf[[col_true]] == 1) & (df[[col_pred]]== 0)
# Assign labels based on conditions
df$Label[condition_tp] <- 'True Positive'
df$Label[condition_fp] <- 'False Positive'
df$Label[condition_tn] <- 'True Negative'
df$Label[condition_fn] <- 'False Negative'
# Display the data frame with the new labels
return(df$Label)
}
death_proj = read_tsv("dt_long_baseline_merged_03_2024.tsv") %>%
filter(!is.na(age_death))%>%arrange(projid,fu_year)%>%group_by(projid)%>%summarise(dcfdx_m = last(dcfdx_max),study=last(study))%>%filter(dcfdx_m<6)
death = death_proj %>%
filter(!is.na(age_death)) %>% filter(projid %in% death_proj$projid)
death = read_tsv("dt_long_baseline_merged_03_2024.tsv") %>%
filter(!is.na(age_death)) %>% filter(projid %in% death_proj$projid)
find.onset.idx <- function(x){
# return the onset index; otherwise return baseline
if(sum(x %in% c(4, 5)) > 0){
return(min(which(x %in% c(4,5))))
}else
{return(100)}
}
dcfdx_dt_onset <- tibble::as_tibble(death) %>%
dplyr::select(c(projid, study, fu_year, dcfdx, age_at_visit)) %>%
dplyr::reframe(n_fu_year = n(),
study = dplyr::first(study),
dcfdx_baseline = dplyr::first(dcfdx),
enroll_last = last(fu_year),
dcfdx_max = my.max(dcfdx),
last_visit_age = last(age_at_visit),
onset = fu_year[find.onset.idx(dcfdx)], .by = projid)
dcfdx_dt_onset$time = ifelse(is.na(dcfdx_dt_onset$onset),dcfdx_dt_onset$enroll_last,dcfdx_dt_onset$onset)
dcfdx_dt_onset$true_label = "NCI"
dcfdx_dt_onset$true_label = ifelse(dcfdx_dt_onset$dcfdx_max%in%c(4,5),"AD",ifelse(dcfdx_dt_onset$dcfdx_max%in%c(2,3),"MCI","NCI"))
death_predict = dcfdx_dt_onset%>%merge(death,by=c("projid","study"))%>%filter(fu_year==time) %>% select("projid","study","time","true_label",all_of(clinic_var_list))
death_matrix = death_predict %>% select(all_of(clinic_var_list))%>%as.matrix()
death_predict$pred_tangles = predict(lm_tangles_map, newx = death_matrix )
death_predict$pred_amyloid = predict(lm_amy, newx = death_matrix )
death_predict$pred_gpath = predict(lm_gpath, newx = death_matrix )
death_predict$pred_NIA = predict(lm_nia, newx = death_matrix )
death_predict$msex =  as.character(death_predict$msex)
View(death_predict)
death_predict_MAP = death_predict %>% filter(study=="MAP")
death_predict_ROS = death_predict %>% filter(study=="ROS")
death_predict$ADD = ifelse(death_predict$true_label=="AD",1,0)
death_predict_MAP = death_predict %>% filter(study=="MAP")
death_predict_ROS = death_predict %>% filter(study=="ROS")
cscfit_ADD_all<- CSC(Hist(time, AD) ~ age_at_visit + msex + educ + pred_NIA+pred_tangles+pred_amyloid+pred_gpath,data = death_predict_MAP )
cscfit_ADD_all<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA+pred_tangles+pred_amyloid+pred_gpath,data = death_predict_MAP )
death_predict$ADD = ifelse(death_predict$true_label=="AD",1,0)
View(death_predict)
cscfit_ADD_all<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA+pred_tangles+pred_amyloid+pred_gpath,data = death_predict_MAP )
View(death_predict_MAP)
library(tidyverse)
library(readxl)
library(xtable)
# library(devtools)
# install_github("tagteam/riskRegression")
######
library(caret)
library(glmnet)
library(ROCR);
library(plotROC)
library(pROC)
#library(e1071)
#library(party)
#library(gbm)
#library(abind)
library(Publish)
library(survival)
library(riskRegression)
#IRkernel::installspec(user = FALSE)
#library(ranger)
library(ggfortify)
# Read in processed cross sectional data
dataset_basic = read_csv("dataset_basic_processed_01_25_2024.csv")
dataset_basic <- data.frame(dataset_basic)
rownames(dataset_basic) <- dataset_basic$projid
dim(dataset_basic)
# clinical variables used for risk prediction
clinic_var_list = c("age_at_visit",  "bmi", "cogn_global", "cts_mmse30",  "dbp_avg", "sbp_avg", "phys5itemsum",
"cesdsum",              "soc_net",              "hypertension_cum",     "cancer_cum",
"dm_cum",               "headinjrloc_cum",      "thyroid_cum",          "claudication_cum",
"heart_cum",            "stroke_cum",           "vasc_risks_sum",       "mental_health_rx",
"analgesic_rx",         "antibiotic_rx" ,       "antihyp_all_rx",       "cardiac_rx",
"antianxiety_rx",       "anti_inflammatory_rx", "aspirin_rx",           "lipid_lowering_rx",
"insomnia_rx",          "diabetes_rx",          "educ",                 "msex",
"mateduc" ,             "pateduc",              "extraversion_6",       "anxiety_10items",
"early_hh_ses" ,        "neuroticism_12",       "angertrait",           "alcohol_g_bl",
"ldai_bl" ,             "smoking",              "apoe_E2",              "apoe_E4",
"TOMM40_S",             "TOMM40_L",             "TOMM40_VL",
"motor_dexterity",      "motor_gait",           "motor_handstreng",
"bradysc",              "gaitsc",               "rigidsc",
"tremsc",   "q1slp",  "q2slp", "q4slp", "q5slp")
length(clinic_var_list)
test_auc_ros_YT= function(true_outcome = ADD_test, pred_outcome = risk_ADD_tangles,
spec_target=0.8,
file_name = "ROC_coxreg_ros_ADD_tangles.jpg"){
#initialize lists for roc objects
rocproj_list <- conf_mat_list <- vector(mode = "list", 2)
true_event = NULL
risk_pred = NULL
accuracy_vec <- rep(NA, 2)
threshold_vec = c(0,0)
# start to create roc projects for Y3 and Y5 results
for(k in 1:2){
#true result: should be ADD_test df for all pathologies
true_event = c(true_event, true_outcome[, k])
#predicted result: should be each pathologies models
risk_pred = c(risk_pred, pred_outcome[, k])
rocproj_list[[k]] <- roc(true_outcome[, k], pred_outcome[, k])
# find the index of threshold that maintained ~0.8 specificities
idx = min(which(rocproj_list[[k]]$specificities>= spec_target))
print(c("risk score threshold=", rocproj_list[[k]]$thresholds[idx]))
conf_mat_list[[k]] = confusionMatrix(factor( as.numeric(pred_outcome[, k] >
rocproj_list[[k]]$thresholds[idx]) ),
factor(true_outcome[, k]), positive = "1")
accuracy_vec[k] = conf_mat_list[[k]]$overall["Accuracy"]
threshold_vec[k] = rocproj_list[[k]]$thresholds[idx]
}
#plotting df
coxpred_data = data.frame(D = true_event,
M = risk_pred,
t = c(
rep(3, nrow(true_outcome)),
rep(5, nrow(true_outcome)) )
)
## Plot ROC curves
basicplot = ggplot(coxpred_data,
aes(d = D, m = M, color = as.factor(t))) +
geom_roc(labels=F)  +
labs(x = "1 - Specificity", y = "Sensitivity", title = NULL)
basicplot
basicplot2 = basicplot+annotate("text", x = .35, y = c(0.45, 0.3),
label = paste(c("AUC Year 3 =", "AUC Year 5 ="),
c(round(auc(rocproj_list[[1]]),3),round(auc(rocproj_list[[2]]),3)) ), hjust = 0,
size = 9)+
guides(color=guide_legend(title="Year", override.aes = list(size = 2)),
size = FALSE) +
theme(text = element_text(size = 30, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position=c(0.54, 0.2), legend.direction = "horizontal",
legend.background = element_rect(fill = "transparent"))
basicplot2
ggsave(file_name,plot=basicplot2, width = 8, height = 7)
print(basicplot2)
return((list(rocproj_list = rocproj_list,
accuracy_vec = accuracy_vec,
conf_mat_list = conf_mat_list,
th_vec = threshold_vec)))
}
# load("clinic_var_list.RData") # load variables belong to clinic var list
# Read in processed merged complete longitudinal data with cross-sectional data
dt_merge = read_tsv("dt_long_baseline_merged_03_2024.tsv")
dim(dt_merge) # 26675    71
# only keep the baseline data on pseudo-baseline year.
dt_long_baseline = filter(dt_merge, fu_year == start)
dt_long_baseline$projid = as.numeric(dt_long_baseline$projid )
dim(dt_long_baseline) # 2609   71
###### Load survival data at baseline (11/2023)
# dt_surv_yr <- read_csv("./YT_data_surv_032024.csv") # 2705 74 # psuedo baseline
dt_surv_yr <- read_csv("./YT_data_surv_032024_true_baseline.csv") # 2705 74
dim(dt_surv_yr) # 2609   74
table(dt_surv_yr$ADD,dt_surv_yr$study)
check = dt_surv_yr %>% select(projid, all_of(clinic_var_list))%>%na.omit()
finalist = check$projid
train_map_add_mcinci_yr <- dt_surv_yr %>% filter(study=="MAP")%>%
select(c("projid", "time", "ADD",
"age_at_visit", "msex", "educ","start",all_of(clinic_var_list)))%>%na.omit()  #1223
test_ros_add_mcinci_yr <- dt_surv_yr %>% filter(study=="ROS")%>%
select(c("projid", "time", "ADD",
"age_at_visit", "msex", "educ","start",all_of(clinic_var_list))) %>%na.omit() #1071
table(dt_surv_yr$ADD,dt_surv_yr$dcfdx_baseline%in%c(2,3))
View(dt_surv_yr)
table(!is.na(dt_surv_yr$age_death))
dt_decedents = dt_surv_yr %>% filter(!is.na(age_death))
dt_decedents_MAP = dt_decedents%>%filter(study=="MAP")
dt_decedents_MAP = dt_decedents%>%filter(study=="ROS")
dt_decedents_MAP = dt_decedents%>%filter(study=="MAP")
dt_decedents_ROS = dt_decedents%>%filter(study=="ROS")
dt_decedents = dt_surv_yr %>% filter(!is.na(age_death))
dt_decedents_MAP = dt_decedents%>%filter(study=="MAP")
dt_decedents_ROS = dt_decedents%>%filter(study=="ROS")
train_matrix_d = dt_decedents_MAP %>% select(all_of(clinic_var_list))%>% na.omit()%>%as.matrix()
dt_decedents_MAP$pred_tangles = predict(lm_tangles_map, newx = train_matrix_d)
load("train_models_Sept2023.Rdata")
dt_decedents = dt_surv_yr %>% filter(!is.na(age_death))
dt_decedents_MAP = dt_decedents%>%filter(study=="MAP")
dt_decedents_ROS = dt_decedents%>%filter(study=="ROS")
train_matrix_d = dt_decedents_MAP %>% select(all_of(clinic_var_list))%>% na.omit()%>%as.matrix()
dt_decedents_MAP$pred_tangles = predict(lm_tangles_map, newx = train_matrix_d)
dt_decedents = dt_surv_yr %>% filter(!is.na(age_death))
dt_decedents_MAP = dt_decedents%>%filter(study=="MAP") %>% na.omit()
dt_decedents_ROS = dt_decedents%>%filter(study=="ROS") %>% na.omit()
train_matrix_d = dt_decedents_MAP %>% select(all_of(clinic_var_list))%>% na.omit()%>%as.matrix()
dt_decedents_MAP$pred_tangles = predict(lm_tangles_map, newx = train_matrix_d)
#sum(is.na(train_map_add_mcinci_yr$pred_tangles))
tdt_decedents_MAP$pred_amyloid = predict(lm_amy, newx = train_matrix_d)
library(tidyverse)
library(readxl)
library(xtable)
# library(devtools)
# install_github("tagteam/riskRegression")
######
library(caret)
library(glmnet)
library(ROCR);
library(plotROC)
library(pROC)
#library(e1071)
#library(party)
#library(gbm)
#library(abind)
library(Publish)
library(survival)
library(riskRegression)
#IRkernel::installspec(user = FALSE)
#library(ranger)
library(ggfortify)
# Read in processed cross sectional data
dataset_basic = read_csv("dataset_basic_processed_01_25_2024.csv")
dataset_basic <- data.frame(dataset_basic)
rownames(dataset_basic) <- dataset_basic$projid
dim(dataset_basic)
# clinical variables used for risk prediction
clinic_var_list = c("age_at_visit",  "bmi", "cogn_global", "cts_mmse30",  "dbp_avg", "sbp_avg", "phys5itemsum",
"cesdsum",              "soc_net",              "hypertension_cum",     "cancer_cum",
"dm_cum",               "headinjrloc_cum",      "thyroid_cum",          "claudication_cum",
"heart_cum",            "stroke_cum",           "vasc_risks_sum",       "mental_health_rx",
"analgesic_rx",         "antibiotic_rx" ,       "antihyp_all_rx",       "cardiac_rx",
"antianxiety_rx",       "anti_inflammatory_rx", "aspirin_rx",           "lipid_lowering_rx",
"insomnia_rx",          "diabetes_rx",          "educ",                 "msex",
"mateduc" ,             "pateduc",              "extraversion_6",       "anxiety_10items",
"early_hh_ses" ,        "neuroticism_12",       "angertrait",           "alcohol_g_bl",
"ldai_bl" ,             "smoking",              "apoe_E2",              "apoe_E4",
"TOMM40_S",             "TOMM40_L",             "TOMM40_VL",
"motor_dexterity",      "motor_gait",           "motor_handstreng",
"bradysc",              "gaitsc",               "rigidsc",
"tremsc",   "q1slp",  "q2slp", "q4slp", "q5slp")
length(clinic_var_list)
test_auc_ros_YT= function(true_outcome = ADD_test, pred_outcome = risk_ADD_tangles,
spec_target=0.8,
file_name = "ROC_coxreg_ros_ADD_tangles.jpg"){
#initialize lists for roc objects
rocproj_list <- conf_mat_list <- vector(mode = "list", 2)
true_event = NULL
risk_pred = NULL
accuracy_vec <- rep(NA, 2)
threshold_vec = c(0,0)
# start to create roc projects for Y3 and Y5 results
for(k in 1:2){
#true result: should be ADD_test df for all pathologies
true_event = c(true_event, true_outcome[, k])
#predicted result: should be each pathologies models
risk_pred = c(risk_pred, pred_outcome[, k])
rocproj_list[[k]] <- roc(true_outcome[, k], pred_outcome[, k])
# find the index of threshold that maintained ~0.8 specificities
idx = min(which(rocproj_list[[k]]$specificities>= spec_target))
print(c("risk score threshold=", rocproj_list[[k]]$thresholds[idx]))
conf_mat_list[[k]] = confusionMatrix(factor( as.numeric(pred_outcome[, k] >
rocproj_list[[k]]$thresholds[idx]) ),
factor(true_outcome[, k]), positive = "1")
accuracy_vec[k] = conf_mat_list[[k]]$overall["Accuracy"]
threshold_vec[k] = rocproj_list[[k]]$thresholds[idx]
}
#plotting df
coxpred_data = data.frame(D = true_event,
M = risk_pred,
t = c(
rep(3, nrow(true_outcome)),
rep(5, nrow(true_outcome)) )
)
## Plot ROC curves
basicplot = ggplot(coxpred_data,
aes(d = D, m = M, color = as.factor(t))) +
geom_roc(labels=F)  +
labs(x = "1 - Specificity", y = "Sensitivity", title = NULL)
basicplot
basicplot2 = basicplot+annotate("text", x = .35, y = c(0.45, 0.3),
label = paste(c("AUC Year 3 =", "AUC Year 5 ="),
c(round(auc(rocproj_list[[1]]),3),round(auc(rocproj_list[[2]]),3)) ), hjust = 0,
size = 9)+
guides(color=guide_legend(title="Year", override.aes = list(size = 2)),
size = FALSE) +
theme(text = element_text(size = 30, face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1, face = "bold"),
legend.position=c(0.54, 0.2), legend.direction = "horizontal",
legend.background = element_rect(fill = "transparent"))
basicplot2
ggsave(file_name,plot=basicplot2, width = 8, height = 7)
print(basicplot2)
return((list(rocproj_list = rocproj_list,
accuracy_vec = accuracy_vec,
conf_mat_list = conf_mat_list,
th_vec = threshold_vec)))
}
# load("clinic_var_list.RData") # load variables belong to clinic var list
# Read in processed merged complete longitudinal data with cross-sectional data
dt_merge = read_tsv("dt_long_baseline_merged_03_2024.tsv")
dim(dt_merge) # 26675    71
# only keep the baseline data on pseudo-baseline year.
dt_long_baseline = filter(dt_merge, fu_year == start)
dt_long_baseline$projid = as.numeric(dt_long_baseline$projid )
dim(dt_long_baseline) # 2609   71
###### Load survival data at baseline (11/2023)
# dt_surv_yr <- read_csv("./YT_data_surv_032024.csv") # 2705 74 # psuedo baseline
dt_surv_yr <- read_csv("./YT_data_surv_032024_true_baseline.csv") # 2705 74
dim(dt_surv_yr) # 2609   74
table(dt_surv_yr$ADD,dt_surv_yr$study)
check = dt_surv_yr %>% select(projid, all_of(clinic_var_list))%>%na.omit()
finalist = check$projid
train_map_add_mcinci_yr <- dt_surv_yr %>% filter(study=="MAP")%>%
select(c("projid", "time", "ADD",
"age_at_visit", "msex", "educ","start",all_of(clinic_var_list)))%>%na.omit()  #1223
test_ros_add_mcinci_yr <- dt_surv_yr %>% filter(study=="ROS")%>%
select(c("projid", "time", "ADD",
"age_at_visit", "msex", "educ","start",all_of(clinic_var_list))) %>%na.omit() #1071
table(dt_surv_yr$ADD,dt_surv_yr$dcfdx_baseline%in%c(2,3))
load("train_models_Sept2023.Rdata")
train_matrix = train_map_add_mcinci_yr %>% select(all_of(clinic_var_list))%>% na.omit()%>%as.matrix()
#View(train_map_add_mcinci_yr)
train_map_add_mcinci_yr$pred_tangles = predict(lm_tangles_map, newx = train_matrix)
#sum(is.na(train_map_add_mcinci_yr$pred_tangles))
train_map_add_mcinci_yr$pred_amyloid = predict(lm_amy, newx = train_matrix)
#sum(is.na(train_map_add_mcinci_yr$pred_amyloid))
train_map_add_mcinci_yr$pred_gpath = predict(lm_gpath, newx = train_matrix)
#sum(is.na(train_map_add_mcinci_yr$pred_gpath))
train_map_add_mcinci_yr$pred_NIA= predict(lm_nia, newx = train_matrix)
train_map_add_mcinci_yr$msex = as.character(train_map_add_mcinci_yr$msex)
test_matrix = test_ros_add_mcinci_yr %>% select(all_of(clinic_var_list))%>%as.matrix()
test_ros_add_mcinci_yr$pred_tangles = predict(lm_tangles_map, newx = test_matrix)
test_ros_add_mcinci_yr$pred_amyloid = predict(lm_amy, newx = test_matrix)
test_ros_add_mcinci_yr$pred_gpath = predict(lm_gpath, newx = test_matrix)
test_ros_add_mcinci_yr$pred_NIA = predict(lm_nia, newx = test_matrix)
test_ros_add_mcinci_yr$msex =  as.character(test_ros_add_mcinci_yr$msex)
dt_surv_ros = test_ros_add_mcinci_yr %>%na.omit()
table(dt_surv_ros$ADD)
# 0   1   2
#427 358 279
## True test labels
ADD_test = data.frame(Y3 = rep(0, nrow(dt_surv_ros)),
Y5 = rep(0, nrow(dt_surv_ros)))
ADD_test[(dt_surv_ros$ADD == 1) &  (dt_surv_ros$time <= 3), 1] = 1
ADD_test[(dt_surv_ros$ADD == 1) &  (dt_surv_ros$time <= 5), 2] = 1
table(ADD_test$Y3) # noAD: 988 AD: 83
table(ADD_test$Y5) # noAD: 731 AD: 340
dim(dt_surv_ros) #1071, 65
table(dt_surv_yr$study,dt_surv_yr$ADD)
#      0   1   2
# MAP 713 434 319
# ROS 433 373 285
# Fit Cox model
# Fit Cox model
cscfit_ADD_tangles <- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_tangles, data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
cscfit_ADD_tangles$causes
model1 <- cscfit_ADD_tangles$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_tangles <- 100*predictRisk(cscfit_ADD_tangles,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_tangles)=c("Y3","Y5")
head(risk_ADD_tangles)
test_auc_ros_YT(true_outcome=ADD_test, pred_outcome=risk_ADD_tangles, file_name = "./Figures/tangles.jpg", spec_target=0.8)
# Fit Cox model
cscfit_ADD_amyloid <- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_amyloid,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_amyloid$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_amyloid <- 100*predictRisk(cscfit_ADD_amyloid,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_amyloid)=c("Y3","Y5")
test_auc_ros_YT(true_outcome=ADD_test, risk_ADD_amyloid, spec_target=0.7, file_name = "./Figures/amy.jpg")
cof = as.matrix(coef(model1))
#plot_cox_coef(coef_mat=cof)
# Fit Cox model
cscfit_ADD_gpath<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_gpath,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_gpath$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_gpath <- 100*predictRisk(cscfit_ADD_gpath,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_gpath)=c("Y3","Y5")
test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_gpath,file_name = "./Figures/gpath.jpg", spec_target = 0.7)
cof = as.matrix(coef(model1))
#plot_cox_coef(coef_mat=cof)
cscfit_ADD_NIA<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_NIA$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_NIA <- 100*predictRisk(cscfit_ADD_NIA,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_NIA)=c("Y3","Y5")
test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_NIA,file_name = "./Figures/NIA.jpg",spec_target = 0.7)
cof = as.matrix(coef(model1))
#plot_cox_coef(coef_mat=cof)
#NIA
cscfit_ADD_1<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_1$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_1 <- 100*predictRisk(cscfit_ADD_1,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_1)=c("Y3","Y5")
test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_1,file_name = "./Figures/NIA.jpg", spec_target = 0.8)
#NIA+amyloid
cscfit_ADD_2<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA+pred_tangles,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_2$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_2 <- 100*predictRisk(cscfit_ADD_2,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_2)=c("Y3","Y5")
test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_2,file_name = "./Figures/NIA+Tangles.jpg", spec_target = 0.8)
#NIA+amyloid+tangles
cscfit_ADD_3<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA+pred_tangles+pred_amyloid,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_3$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_3 <- 100*predictRisk(cscfit_ADD_3,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_3)=c("Y3","Y5")
test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_3,file_name = "./Figures/NIA+Tangles+Amyloid.jpg", spec_target = 0.8)
cscfit_ADD_all<- CSC(Hist(time, ADD) ~ age_at_visit + msex + educ + pred_NIA+pred_tangles+pred_amyloid+pred_gpath,data = train_map_add_mcinci_yr)
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_all$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_all <- 100*predictRisk(cscfit_ADD_all,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_all)=c("Y3","Y5")
result_all = test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_all,file_name = "./Figures/NIA+Tangles+Amyloid+Gpath.jpg", spec_target = 0.8)
result_all
#NIA+amyloid+tangles+gpath
train_57_t= select(train_map_add_mcinci_yr, c(time, ADD, eval(clinic_var_list))) %>% na.omit()
#train_57_t$pred_tangles=as.numeric(train_57_t$pred_tangles)
cscfit_ADD_57_t<- CSC(Hist(time, ADD) ~ .,data = train_57_t )
#print(cscfit_ADD_tangles)
model1 <- cscfit_ADD_57_t$models$`Cause 1`
summary(model1)$coefficients
# Predict risk scores
risk_ADD_57_t <- 100*predictRisk(cscfit_ADD_57_t,
newdata = dt_surv_ros, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
colnames(risk_ADD_57_t)=c("Y3","Y5")
result=test_auc_ros_YT(true_outcome=ADD_test,risk_ADD_57_t,file_name = "./Figures/57clinic.jpg",spec_target = 0.8)
result
save(risk_ADD_all,cscfit_ADD_all,result_all,file="sequential_model.RData")
dt_decedents = dt_surv_yr %>% filter(!is.na(age_death))
dt_decedents_MAP = dt_decedents%>%filter(study=="MAP") %>% na.omit()
dt_decedents_ROS = dt_decedents%>%filter(study=="ROS") %>% na.omit()
train_matrix_d = dt_decedents_MAP %>% select(all_of(clinic_var_list))%>% na.omit()%>%as.matrix()
dt_decedents_MAP$pred_tangles = predict(lm_tangles_map, newx = train_matrix_d)
#sum(is.na(train_map_add_mcinci_yr$pred_tangles))
dt_decedents_MAP$pred_amyloid = predict(lm_amy, newx = train_matrix_d)
#sum(is.na(train_map_add_mcinci_yr$pred_amyloid))
dt_decedents_MAP$pred_gpath = predict(lm_gpath, newx = train_matrix_d)
#sum(is.na(train_map_add_mcinci_yr$pred_gpath))
dt_decedents_MAP$pred_NIA= predict(lm_nia, newx = train_matrix_d)
dt_decedents_MAP$msex = as.character(dt_decedents_MAP$msex)
test_matrix_d = dt_decedents_ROS %>% select(all_of(clinic_var_list))%>%as.matrix()
dt_decedents_ROS$pred_tangles = predict(lm_tangles_map, newx = test_matrix_d)
dt_decedents_ROS$pred_amyloid = predict(lm_amy, newx = test_matrix_d)
dt_decedents_ROS$pred_gpath = predict(lm_gpath, newx = test_matrix_d)
dt_decedents_ROS$pred_NIA = predict(lm_nia, newx = test_matrix_d)
dt_decedents_ROS$msex =  as.character(dt_decedents_ROS$msex)
table(dt_decedents$ADD)
# Predict risk scores
risk_ADD_all <- 100*predictRisk(cscfit_ADD_all,
newdata = dt_decedents_ROS, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
View(risk_ADD_all)
ADD_test_d = data.frame(Y3 = rep(0, nrow(dt_decedents_ROS)),
Y5 = rep(0, nrow(dt_decedents_ROS)))
ADD_test_d[(dt_decedents_ROS$ADD == 1) &  (dt_decedents_ROS$time <= 3), 1] = 1
ADD_test_d[(dt_decedents_ROS$ADD == 1) &  (dt_decedents_ROS$time <= 5), 2] = 1
table(ADD_test_d$Y3)
table(ADD_test_d$Y5)
# Predict risk scores
risk_ADD_all_d <- 100*predictRisk(cscfit_ADD_all,
newdata = dt_decedents_ROS, times=c(3, 5),
se = TRUE, cause=1) %>% as.data.frame()
result_d=test_auc_ros_YT(true_outcome=ADD_test_d,risk_ADD_all_d,file_name = "./Figures/decedents_all.jpg",spec_target = 0.8)
table(dt_surv_yr$study,dt_surv_yr$ADD)
.libPaths()
ls()
getwd()
setwd("/Users/liuyingte/Desktop/Emory/BIOS/550/DATA550_Renv")
.libPaths()
renv::activate()
.libPaths()
